![](https://www.baidu.com/s?wd=%E4%B8%AD%E5%9B%BD%E8%88%AA%E5%A4%A9%E6%97%A5&sa=ire_dl_gh_logo_texing&rsv_dl=igh_logo_pc)
function [J, grad] = costFunction(theta, X, y)
%COSTFUNCTION Compute cost and gradient for logistic regression
%   J = COSTFUNCTION(theta, X, y) computes the cost of using theta as the
%   parameter for logistic regression and the gradient of the cost
%   w.r.t. to the parameters.

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta
%
% Note: grad should have the same dimensions as theta
%
one = ones(m, 1);
num1 = (-y)' * log(sigmoid((X * theta))) - (one - y)' * log(one - sigmoid((X * theta)));
J = sum(num1) / m;


grad1 = sum((sigmoid((X * theta)) - y) .* X(:, 1)) / m;
grad2 = sum((sigmoid((X * theta)) - y) .* X(:, 2)) / m;
grad3 = sum((sigmoid((X * theta)) - y) .* X(:, 3)) / m;



grad = [grad1, grad2, grad3];







% =============================================================

end
