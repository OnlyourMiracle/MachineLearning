function [J, grad] = costFunctionReg(theta, X, y, lambda)
%COSTFUNCTIONREG Compute cost and gradient for logistic regression with regularization
%   J = COSTFUNCTIONREG(theta, X, y, lambda) computes the cost of using
%   theta as the parameter for regularized logistic regression and the
%   gradient of the cost w.r.t. to the parameters. 

% Initialize some useful values
m = length(y); % number of training examples

% You need to return the following variables correctly 
J = 0;
grad = zeros(size(theta));

% ====================== YOUR CODE HERE ======================
% Instructions: Compute the cost of a particular choice of theta.
%               You should set J to the cost.
%               Compute the partial derivatives and set grad to the partial
%               derivatives of the cost w.r.t. each parameter in theta
one = ones(m, 1);
num1 = (-y)' * log(sigmoid((X * theta))) - (one - y)' * log(one - sigmoid((X * theta)));

J = sum(num1) / m + lambda / (2 * m) * sum(theta([2:end], end) .^ 2);


grad1 = sum((sigmoid((X * theta)) - y) .* X(:, 1)) / m;
grad(1, 1) = grad1;
for iter = 2:size(theta) 
    num = sum((sigmoid((X * theta)) - y) .* X(:, iter)) / m + lambda / m * theta(iter, end);
    grad(iter, 1) = num;
end


% =============================================================

end